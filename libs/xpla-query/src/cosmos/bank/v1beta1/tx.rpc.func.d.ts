import { SigningClientResolver } from "../../../helper-func-types";
import { MsgSend, MsgMultiSend, MsgUpdateParams, MsgSetSendEnabled } from "./tx";
export declare const createSend: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgSend, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useSend: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgSend>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgSend>, unknown>;
export declare const createMultiSend: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgMultiSend, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useMultiSend: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgMultiSend>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgMultiSend>, unknown>;
export declare const createUpdateParams: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpdateParams, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useUpdateParams: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgUpdateParams>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgUpdateParams>, unknown>;
export declare const createSetSendEnabled: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgSetSendEnabled, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useSetSendEnabled: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgSetSendEnabled>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgSetSendEnabled>, unknown>;
