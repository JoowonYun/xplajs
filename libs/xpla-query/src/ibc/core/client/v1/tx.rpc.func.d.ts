import { SigningClientResolver } from "../../../../helper-func-types";
import { MsgCreateClient, MsgUpdateClient, MsgUpgradeClient, MsgSubmitMisbehaviour, MsgRecoverClient, MsgIBCSoftwareUpgrade, MsgUpdateParams } from "./tx";
export declare const createCreateClient: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgCreateClient, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useCreateClient: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgCreateClient>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgCreateClient>, unknown>;
export declare const createUpdateClient: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpdateClient, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useUpdateClient: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpdateClient>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpdateClient>, unknown>;
export declare const createUpgradeClient: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpgradeClient, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useUpgradeClient: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpgradeClient>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpgradeClient>, unknown>;
export declare const createSubmitMisbehaviour: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgSubmitMisbehaviour, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useSubmitMisbehaviour: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgSubmitMisbehaviour>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgSubmitMisbehaviour>, unknown>;
export declare const createRecoverClient: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgRecoverClient, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useRecoverClient: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgRecoverClient>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgRecoverClient>, unknown>;
export declare const createIBCSoftwareUpgrade: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgIBCSoftwareUpgrade, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useIBCSoftwareUpgrade: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgIBCSoftwareUpgrade>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgIBCSoftwareUpgrade>, unknown>;
export declare const createUpdateClientParams: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpdateParams, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const useUpdateClientParams: ({ options, clientResolver }: import("../../../../react-query").ReactMutationParams<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpdateParams>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../../helper-func-types").DeliverTxResponse, Error, import("../../../../helper-func-types").ITxArgs<MsgUpdateParams>, unknown>;
