import { SigningClientResolver } from "../../../helper-func-types";
import { MsgRegisterVolunteerValidator, MsgUnregisterVolunteerValidator } from "./tx";
export declare const createRegisterVolunteerValidator: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgRegisterVolunteerValidator, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useRegisterVolunteerValidator: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgRegisterVolunteerValidator>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgRegisterVolunteerValidator>, unknown>;
export declare const createUnregisterVolunteerValidator: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUnregisterVolunteerValidator, fee: import("../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../helper-func-types").DeliverTxResponse>;
export declare const useUnregisterVolunteerValidator: ({ options, clientResolver }: import("../../../react-query").ReactMutationParams<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgUnregisterVolunteerValidator>, unknown>) => import("@tanstack/react-query").UseMutationResult<import("../../../helper-func-types").DeliverTxResponse, Error, import("../../../helper-func-types").ITxArgs<MsgUnregisterVolunteerValidator>, unknown>;
