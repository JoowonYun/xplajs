import { SigningClientResolver } from "../../../../helper-func-types";
import { MsgChannelOpenInit, MsgChannelOpenTry, MsgChannelOpenAck, MsgChannelOpenConfirm, MsgChannelCloseInit, MsgChannelCloseConfirm, MsgRecvPacket, MsgTimeout, MsgTimeoutOnClose, MsgAcknowledgement, MsgChannelUpgradeInit, MsgChannelUpgradeTry, MsgChannelUpgradeAck, MsgChannelUpgradeConfirm, MsgChannelUpgradeOpen, MsgChannelUpgradeTimeout, MsgChannelUpgradeCancel, MsgUpdateParams, MsgPruneAcknowledgements } from "./tx";
export declare const createChannelOpenInit: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelOpenInit, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelOpenTry: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelOpenTry, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelOpenAck: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelOpenAck, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelOpenConfirm: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelOpenConfirm, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelCloseInit: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelCloseInit, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelCloseConfirm: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelCloseConfirm, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createRecvPacket: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgRecvPacket, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createTimeout: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgTimeout, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createTimeoutOnClose: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgTimeoutOnClose, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createAcknowledgement: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgAcknowledgement, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeInit: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeInit, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeTry: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeTry, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeAck: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeAck, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeConfirm: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeConfirm, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeOpen: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeOpen, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeTimeout: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeTimeout, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createChannelUpgradeCancel: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgChannelUpgradeCancel, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createUpdateChannelParams: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpdateParams, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createPruneAcknowledgements: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgPruneAcknowledgements, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
