import { SigningClientResolver } from "../../../../helper-func-types";
import { MsgConnectionOpenInit, MsgConnectionOpenTry, MsgConnectionOpenAck, MsgConnectionOpenConfirm, MsgUpdateParams } from "./tx";
export declare const createConnectionOpenInit: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgConnectionOpenInit, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createConnectionOpenTry: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgConnectionOpenTry, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createConnectionOpenAck: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgConnectionOpenAck, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createConnectionOpenConfirm: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgConnectionOpenConfirm, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
export declare const createUpdateConnectionParams: (clientResolver?: SigningClientResolver) => (signerAddress: string, message: MsgUpdateParams, fee: import("../../../../helper-func-types").StdFee | "auto", memo: string) => Promise<import("../../../../helper-func-types").DeliverTxResponse>;
